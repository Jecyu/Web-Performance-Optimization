(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{468:function(t,e,a){"use strict";a.r(e);var r=a(0),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"web-性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-性能优化"}},[t._v("#")]),t._v(" Web 性能优化")]),t._v(" "),a("p",[t._v("web 应用性能优化一般在于产品交付的阶段，当然在开发周期允许的情况下，有意识对可能导致性能问题提前考虑是大大有利的。 web 应用的性能优化包括服务端与客户端（浏览器），服务端在于响应速度，客户端则在于渲染交互，前端的优化往往能起到立竿见影的效果。另外对于开发过程的优化也属于性能优化的范畴，例如利用 webpack 进行开发如何提升工作效率。")]),t._v(" "),a("p",[t._v("本次的研究是以浏览器端的性能优化为主，整体思路是：从浏览器输入URL 到页面渲染出来经历的过程。")]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("router-link",{attrs:{to:"/reference/"}},[t._v("Web 性能优化资源合集（持续更新）")])],1)]),t._v(" "),a("h2",{attrs:{id:"声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明"}},[t._v("#")]),t._v(" 声明")]),t._v(" "),a("p",[t._v("本书的内容会借鉴和参考社区优秀的文章，如有侵犯你的权益，请联系我修改删除，感谢社区的贡献🙏。")]),t._v(" "),a("blockquote",[a("p",[t._v("如果本仓库对你有帮助，请点个 star，也是对作者的鼓励。")])])])}),[],!1,null,null,null);e.default=s.exports}}]);